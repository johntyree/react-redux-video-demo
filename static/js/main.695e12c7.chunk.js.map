{"version":3,"sources":["apis/youtube.js","actions/index.js","components/SearchBar.js","components/VideoItem.js","components/VideoList.js","components/VideoDetail.js","components/App.js","reducers/index.js","index.js"],"names":["axios","create","baseURL","params","part","maxResults","key","selectVideo","video","type","payload","SearchBar","props","focus","searchInput","current","select","onInputChange","event","updateTerm","target","value","onFormSubmit","preventDefault","submitSearch","a","youtube","get","q","term","response","updateVideos","data","items","React","createRef","className","onSubmit","this","ref","onChange","Component","connect","videos","forwardRef","onClick","src","snippet","thumbnails","medium","url","alt","title","renderedList","map","id","videoId","selectedVideo","videoSrc","description","App","searchBar","combineReducers","action","ReactDOM","render","store","createStore","reducers","document","querySelector"],"mappings":"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","file":"static/js/main.695e12c7.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst KEY = \"AIzaSyDUQVUYbByIN1P_XwfIgjRo9GX0NHGy40E\";\n\nexport default axios.create({\n    baseURL: 'https://www.googleapis.com/youtube/v3',\n    params: {\n      part: 'snippet',\n      maxResults: 5,\n      key: KEY\n    }\n});\n","export const VIDEOS_UPDATED = 'VIDEOS_UPDATED';\nexport const VIDEO_SELECTED = 'VIDEO_SELECTED';\nexport const TERM_UPDATED = 'TERM_UPDATED';\n\nexport const updateVideos = videos => {\n  return {\n    type: VIDEOS_UPDATED,\n    payload: videos\n  };\n};\n\nexport const selectVideo = video => {\n  return {\n    type: VIDEO_SELECTED,\n    payload: video\n  };\n};\n\nexport const updateTerm = term => {\n  return {\n    type: TERM_UPDATED,\n    payload: term\n  };\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport youtube from '../apis/youtube';\nimport { selectVideo, updateTerm, updateVideos } from '../actions';\n\nclass SearchBar extends React.Component {\n    constructor(props) {\n      super(props);\n      this.searchInput = React.createRef();\n    }\n\n    focus = () => {\n      this.searchInput.current.focus();\n      this.searchInput.current.select();\n    }\n\n    onInputChange = (event) => {\n      this.props.updateTerm(event.target.value);\n    };\n\n    onFormSubmit = (event) => {\n      event.preventDefault();\n      this.submitSearch();\n      this.searchInput.current.select();\n    }\n\n    submitSearch = async () => {\n      const response = await youtube.get('/search', {\n        params: {\n          q: this.props.term\n        }\n      });\n\n      this.props.updateVideos(response.data.items);\n      // Take first video from the results\n      this.props.selectVideo(response.data.items[0]);\n    };\n\n\n    render() {\n        return (\n            <div className=\"search-bar ui segment\">\n              <form onSubmit={this.onFormSubmit} className=\"ui form\">\n                  <div className=\"field\">\n                      <label>Video Search</label>\n                      <input\n                         ref={this.searchInput}\n                         type=\"text\"\n                         value={this.props.term}\n                         onChange={this.onInputChange}\n                      />\n                  </div>\n              </form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = ({ term }) => {\n  return { term };\n};\n\nexport default connect(\n  mapStateToProps,\n  { selectVideo, updateTerm, updateVideos },\n  null,\n  { forwardRef: true }\n)(SearchBar);\n","import './VideoItem.css';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { selectVideo } from '../actions';\n\nconst VideoItem = ({ video, selectVideo }) => {\n  return (\n    <div onClick={() => selectVideo(video)} className=\"video-item item\">\n      <img className=\"ui image\"\n           src={video.snippet.thumbnails.medium.url}\n           alt={video.snippet.title}/>\n           <div className=\"content\">\n             <div className=\"header\">\n                {video.snippet.title}\n             </div>\n           </div>\n    </div>\n  );\n};\n\nexport default connect(null, { selectVideo })(VideoItem);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport VideoItem from './VideoItem';\n\nconst VideoList = ({ videos }) => {\n  const renderedList = videos.map(video => {\n    return <VideoItem key={video.id.videoId} video={video}/>;\n  });\n  return (\n    <div className=\"ui relaxed divided list\">\n      {renderedList}\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ videos }) => { return { videos }; };\n\nexport default connect(mapStateToProps)(VideoList);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst VideoDetail = ({ video }) => {\n  if (!video) { return <div>Loading ...</div>; };\n  const videoSrc = \"https://youtube.com/embed/\" + video.id.videoId;\n  return (\n    <div>\n      <div className=\"ui embed\">\n        <iframe title=\"Video Player\" src={videoSrc} />\n      </div>\n      <div className=\"ui segment\">\n        <h4 className=\"ui header\">{video.snippet.title}</h4>\n        <p>{video.snippet.description}</p>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ selectedVideo }) => {\n  return { \"video\": selectedVideo };\n};\n\nexport default connect(mapStateToProps)(VideoDetail);\n","import React from 'react';\n\nimport SearchBar from './SearchBar';\nimport VideoList from './VideoList';\nimport VideoDetail from './VideoDetail';\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.searchBar = React.createRef();\n  }\n\n  componentDidMount() {\n    this.searchBar.current.focus();\n    this.searchBar.current.submitSearch();\n  }\n\n  render() {\n      return (\n          <div className=\"ui container\">\n            <SearchBar ref={this.searchBar} />\n            <div className=\"ui grid\">\n              <div className=\"ui row\">\n                <div className=\"eleven wide column\">\n                  <VideoDetail />\n                </div>\n                <div className=\"five wide column\">\n                  <VideoList />\n                </div>\n              </div>\n            </div>\n          </div>\n      );\n  }\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { VIDEOS_UPDATED, VIDEO_SELECTED, TERM_UPDATED } from '../actions';\n\n\nconst videosReducer = (videos = [], action) => {\n  if (action.type === VIDEOS_UPDATED) {\n    return action.payload;\n  }\n  return videos;\n};\n\nconst selectedVideoReducer = (video = null, action) => {\n  if (action.type === VIDEO_SELECTED) {\n    return action.payload\n  }\n  return video;\n}\n\nconst termReducer = (term = null, action) => {\n  if (action.type === TERM_UPDATED) {\n    return action.payload;\n  }\n  return term;\n}\n\nexport default combineReducers({\n  selectedVideo: selectedVideoReducer,\n  term: termReducer,\n  videos: videosReducer\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst initialState = { term: 'bananas' };\n\nReactDOM.render(\n  <Provider store={createStore(reducers, initialState)}>\n    <App />\n  </Provider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}